<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinshe.web.dao.mapper.ProductDao" >
  <resultMap id="BaseResultMap" type="com.xinshe.web.dao.entity.Product" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="prod_id" property="prodId" jdbcType="VARCHAR" />
    <result column="prod_name" property="prodName" jdbcType="VARCHAR" />
    <result column="prod_color" property="prodColor" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="field1" property="field1" jdbcType="VARCHAR" />
    <result column="field2" property="field2" jdbcType="VARCHAR" />
    <result column="field3" property="field3" jdbcType="VARCHAR" />
    <result column="field4" property="field4" jdbcType="VARCHAR" />
    <result column="field5" property="field5" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xinshe.web.dao.entity.Product" extends="BaseResultMap" >
    <result column="prod_material" property="prodMaterial" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, prod_id, prod_name, prod_color, create_time, create_id, update_time, update_id, 
      field1, field2, field3, field4, field5
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <sql id="Blob_Column_List" >
    prod_material
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xinshe.web.dao.entity.ProductQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinshe.web.dao.entity.ProductQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.xinshe.web.dao.entity.ProductQuery" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinshe.web.dao.entity.Product" >
    insert into product (id, prod_id, prod_name, 
      prod_color, create_time, create_id, 
      update_time, update_id, field1, 
      field2, field3, field4, 
      field5, prod_material)
    values (#{id,jdbcType=BIGINT}, #{prodId,jdbcType=VARCHAR}, #{prodName,jdbcType=VARCHAR}, 
      #{prodColor,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, #{field1,jdbcType=VARCHAR}, 
      #{field2,jdbcType=VARCHAR}, #{field3,jdbcType=VARCHAR}, #{field4,jdbcType=VARCHAR}, 
      #{field5,jdbcType=VARCHAR}, #{prodMaterial,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xinshe.web.dao.entity.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="prodId != null" >
        prod_id,
      </if>
      <if test="prodName != null" >
        prod_name,
      </if>
      <if test="prodColor != null" >
        prod_color,
      </if>
        create_time,
      <if test="createId != null" >
        create_id,
      </if>
        update_time,
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="field1 != null" >
        field1,
      </if>
      <if test="field2 != null" >
        field2,
      </if>
      <if test="field3 != null" >
        field3,
      </if>
      <if test="field4 != null" >
        field4,
      </if>
      <if test="field5 != null" >
        field5,
      </if>
      <if test="prodMaterial != null" >
        prod_material,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="prodId != null" >
        #{prodId,jdbcType=VARCHAR},
      </if>
      <if test="prodName != null" >
        #{prodName,jdbcType=VARCHAR},
      </if>
      <if test="prodColor != null" >
        #{prodColor,jdbcType=VARCHAR},
      </if>
      now(),
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      now(),
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="field1 != null" >
        #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null" >
        #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null" >
        #{field3,jdbcType=VARCHAR},
      </if>
      <if test="field4 != null" >
        #{field4,jdbcType=VARCHAR},
      </if>
      <if test="field5 != null" >
        #{field5,jdbcType=VARCHAR},
      </if>
      <if test="prodMaterial != null" >
        #{prodMaterial,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinshe.web.dao.entity.ProductQuery" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.prodId != null" >
        prod_id = #{record.prodId,jdbcType=VARCHAR},
      </if>
      <if test="record.prodName != null" >
        prod_name = #{record.prodName,jdbcType=VARCHAR},
      </if>
      <if test="record.prodColor != null" >
        prod_color = #{record.prodColor,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
        now(),
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.field1 != null" >
        field1 = #{record.field1,jdbcType=VARCHAR},
      </if>
      <if test="record.field2 != null" >
        field2 = #{record.field2,jdbcType=VARCHAR},
      </if>
      <if test="record.field3 != null" >
        field3 = #{record.field3,jdbcType=VARCHAR},
      </if>
      <if test="record.field4 != null" >
        field4 = #{record.field4,jdbcType=VARCHAR},
      </if>
      <if test="record.field5 != null" >
        field5 = #{record.field5,jdbcType=VARCHAR},
      </if>
      <if test="record.prodMaterial != null" >
        prod_material = #{record.prodMaterial,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=BIGINT},
      prod_id = #{record.prodId,jdbcType=VARCHAR},
      prod_name = #{record.prodName,jdbcType=VARCHAR},
      prod_color = #{record.prodColor,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      field1 = #{record.field1,jdbcType=VARCHAR},
      field2 = #{record.field2,jdbcType=VARCHAR},
      field3 = #{record.field3,jdbcType=VARCHAR},
      field4 = #{record.field4,jdbcType=VARCHAR},
      field5 = #{record.field5,jdbcType=VARCHAR},
      prod_material = #{record.prodMaterial,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=BIGINT},
      prod_id = #{record.prodId,jdbcType=VARCHAR},
      prod_name = #{record.prodName,jdbcType=VARCHAR},
      prod_color = #{record.prodColor,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      field1 = #{record.field1,jdbcType=VARCHAR},
      field2 = #{record.field2,jdbcType=VARCHAR},
      field3 = #{record.field3,jdbcType=VARCHAR},
      field4 = #{record.field4,jdbcType=VARCHAR},
      field5 = #{record.field5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>